{"version":3,"sources":["components/autocomplete/index.js","components/appBar/page.js","redux/actions/findSuggestions.js","redux/actions/findResults.js","components/appBar/index.js","components/results/page.js","components/results/index.js","components/details/page.js","redux/actions/findCurrentItem.js","components/details/index.js","data/items.js","redux/reducers/currentItem.js","redux/reducers/results.js","redux/reducers/suggestions.js","redux/store.js","index.js"],"names":["Autocomplete","props","state","isOpen","this","suggestions","onChangeText","onChangeSelection","text","className","InputBase","placeholder","value","style","width","onChange","event","newText","target","setState","onBlur","setTimeout","onFocus","onKeyPress","key","Paper","square","map","suggestion","MenuItem","id","component","onClick","title","Component","Page","AppBar","position","Toolbar","Typography","variant","color","type","findSuggestions","payload","findResults","IAppBar","bind","history","push","mapDispatchToProps","withRouter","connect","results","goTo","isEmpty","length","CssBaseline","item","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","content","Results","path","currentItem","elevation","backgroundImage","CircularProgress","Button","findCurrentItem","Details","parseInt","match","params","itemId","defaultState","reducer","findCurrentItemType","items","find","n","findResultsType","regex","RegExp","filter","test","findSuggestionsType","combineReducers","store","createStore","App","from","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.962930ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './style.css';\n\nclass Autocomplete extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false,\n        };\n    }\n\n    render() {\n        const {\n            suggestions,\n            onChangeText,\n            onChangeSelection,\n            text,\n        } = this.props;\n        const {\n            isOpen,\n        } = this.state;\n\n        return (\n            <div className=\"main-container\">\n                <div className=\"container-icon\">\n                    <SearchIcon />\n                </div>\n                <InputBase\n                    placeholder=\"Searchâ€¦\"\n                    value={text}\n                    style={{ width: '100%' }}\n                    onChange={(event) => {\n                        const newText = event.target.value;\n\n                        onChangeText(newText);\n\n                        if (!isOpen && newText) {\n                            this.setState({ isOpen: true });\n                        } else if (isOpen && !newText) {\n                            this.setState({ isOpen: false });\n                        }\n                    }}\n                    onBlur={() => {\n                        setTimeout(() => this.setState({ isOpen: false }), 100);\n                    }}\n                    onFocus={() => {\n                        if (text) {\n                            this.setState({ isOpen: true });\n                        }\n                    }}\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter' && text) {\n                            onChangeSelection(text);\n                        }\n                    }}\n                />\n                {isOpen &&\n                <Paper className=\"container-results\" square>\n                    {suggestions.map(suggestion =>\n                    <MenuItem\n                        key={suggestion.id}\n                        component=\"div\"\n                        onClick={() => {\n                            onChangeSelection(suggestion.title);\n                            this.setState({ isOpen: false });\n                        }}\n                    >\n                        {suggestion.title}\n                    </MenuItem>)}\n                </Paper>}\n            </div>\n        );\n    }\n}\n\nexport default Autocomplete;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport Autocomplete from '../autocomplete';\nimport './styles.css';\n\nfunction Page(props){\n    const {\n        text,\n        suggestions,\n        onChangeText,\n        onChangeSelection\n    } = props;\n\n    return(\n      <AppBar position='static'>\n          <Toolbar className='appbar'>\n              <Typography variant='h6' color='inherit'>\n                  Prueba\n              </Typography>\n              <Autocomplete \n                    text={text}\n                    suggestions={suggestions}\n                    onChangeText={onChangeText}\n                    onChangeSelection={onChangeSelection}\n               />\n              <AccountCircle />\n          </Toolbar>\n      </AppBar>\n    )\n};\n\nexport default Page;\n","// If you put one letter, for example a, te suggestions will show you amazon \nexport const type = 'findSuggestions';\n\nconst findSuggestions = (text)  => {\n    return{\n        type,\n        payload: text,\n    }\n};\n\nexport default findSuggestions;","export const type = 'findResults';\n\nconst findResults = (text)  => {\n    return{\n        type,\n        payload: text,\n    }\n};\n\nexport default findResults;","import React, { Component } from 'react';\nimport Page from './page';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport findSuggestions from '../../redux/actions/findSuggestions';\nimport findResults from '../../redux/actions/findResults';\n\n\nclass IAppBar extends Component {\n  constructor(props){\n      super(props);\n\n      this.state = {\n          text: '',\n      };\n\n      this.onChangeText = this.onChangeText.bind(this);\n      this.onChangeSelection = this.onChangeSelection.bind(this);\n  }\n\n  onChangeText(text){\n      this.setState({ text });\n      this.props.findSuggestions(text);\n  }\n\n  onChangeSelection(text){\n      this.setState({ text });\n      this.props.findResults(text);\n      this.props.history.push('/results');\n  }\n\n  render(){   \n    const { text } = this.state; \n    const { suggestions } = this.props;   \n  \n      return (\n         <Page \n            text={text}\n            suggestions={suggestions}\n            onChangeText={this.onChangeText}\n            onChangeSelection={this.onChangeSelection}\n         />\n      )\n    };\n  }\n\nconst mapStateToProps = (state) => {\n  return{\n        suggestions: state.suggestions,\n  };\n};\n\nconst mapDispatchToProps = {\n  findSuggestions,\n  findResults,\n};\n\n\n\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(IAppBar)\n);\n\n\n\n","import React, { Fragment } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport AppBar from '../appBar';\nimport { Typography } from '@material-ui/core';\nimport './style.css'\n\nfunction Page (props) {\n  const {\n      results,\n      goTo,\n  } = props;\n\n  const isEmpty = results.length === 0;\n\n  return (\n    <Fragment>\n        <CssBaseline /> \n        <AppBar />\n        <div className='results-page'>\n            {isEmpty ? \n                <Typography variant='h5' component='h3' className='page-message'>\n                    No hay resultados\n                </Typography>\n                :\n                results.map(item => \n                    <div\n                        key={item.id}\n                        className='card-container'\n                        >\n                            <Card\n                                className=\"card\"\n                                onClick={() => goTo(`/details/${item.id}`)}\n                            >\n                                <CardActionArea>\n                                    <CardMedia\n                                        className=\"card-media\"\n                                        image={item.image}\n                                        title={item.title}\n                                    />\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {item.title}\n                                        </Typography>\n                                        <Typography component=\"p\">\n                                            {item.content}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                    </div>\n                  )\n            }\n        </div>\n     </Fragment>\n  )\n};\n\nexport default Page;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Page from './page';\n\nclass Results extends Component {\n  render(){\n      const { results } = this.props; \n      \n      return (\n         <Page \n            results={results} \n            goTo={(path) => {\n                this.props.history.push(path);\n            }}\n\n         />\n      )\n    };\n  }\n\n\nconst mapStateToProps = (state) => { \n    return{\n        results: state.results\n    };\n};\n\n// const wrapper = connect(mapStateToProps);\n// const component = wrapper(Results);\n\nexport default withRouter(\n    connect(mapStateToProps)(Results) \n);\n\n// How implement react-redux in component's react\n \n// with connect we can connect the component with the state. Need two arguments, the first one is mapStateToProps, the second one is mapDispatchToProps\n\n","import React, { Fragment } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AppBar from '../appBar';\nimport Button from '@material-ui/core/Button';\nimport './style.css';\n\nfunction Page(props) {\n    const {\n        goTo,\n        currentItem,\n    } = props;\n\n    return (\n        <Fragment>\n            <CssBaseline />\n\n            <AppBar />\n\n            <div className=\"details-page\">\n                <Paper\n                    elevation={1}\n                    className=\"paper-container\"\n                >\n                    {currentItem ?\n                        <Fragment>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                {currentItem.title}\n                            </Typography>\n\n                            <div\n                                className=\"item-image\"\n                                style={{\n                                    backgroundImage: `url(${currentItem.image})`,\n                                }}\n                            />\n\n                            <Typography gutterBottom component=\"p\" className=\"content\">\n                                {currentItem.content}\n                            </Typography>\n                        </Fragment>\n                        :\n                        <CircularProgress className=\"item-loader\" />\n                    }\n\n                    <Button\n                        color=\"primary\"\n                        onClick={() => goTo('/results')}\n                    >\n                        Back\n                    </Button>\n                </Paper>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Page;","// if you choice one card, the currentItem will go to save for show in the next screen\nexport const type = 'findCurrentItem';\n\nconst findCurrentItem = (id)  => {\n    return{\n        type,\n        payload: id,\n    }\n};\n\nexport default findCurrentItem;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Page from './page';\nimport findCurrentItem from '../../redux/actions/findCurrentItem';\n\nclass Details extends Component {\n  componentDidMount(){\n      this.props.findCurrentItem(parseInt(this.props.match.params.itemId));\n  }\n\n  render(){\n      const { currentItem } = this.props; \n      \n      return (\n         <Page \n            currentItem={currentItem} \n            goTo={(path) => {\n                this.props.history.push(path);\n            }}\n\n         />\n      )\n    };\n  }\n\n\nconst mapStateToProps = (state) => { \n    return{\n        currentItem: state.currentItem,\n    };\n};\n\n// const wrapper = connect(mapStateToProps);\n// const component = wrapper(Results);\nconst mapDispatchToProps = {\n    findCurrentItem,\n}\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(Details) \n);\n\n// How implement react-redux in component's react\n \n// with connect we can connect the component with the state. Need two arguments, the first one is mapStateToProps, the second one is mapDispatchToProps\n\n","  \nlet id = 1;\n\nexport default \n[\n  {\n      id: id++,\n      title: `Uzumaki Naruto`,\n      image: `http://narutoquoteapi.herokuapp.com/image/naruto.png`,\n      content: `Dattebayo!`,\n  },\n  {\n      id: id++,\n      title: `Uzumaki Naruto`,\n      image: `http://narutoquoteapi.herokuapp.com/image/naruto.png`,\n      content: `I won't run away anymore... I won't go back on my word... that     is my ninja way!`,\n  },\n  { \n      id: id++,\n      title: `Uzumaki Naruto`,\n      image: `http://narutoquoteapi.herokuapp.com/image/naruto.png`,\n      content: `To become Hokage is my dream!`,\n  },\n  {\n      id: id++,\n      title: `Uzumaki Naruto`,\n      image: `http://narutoquoteapi.herokuapp.com/image/naruto.png`,\n      content: `A hero always arrives late.`,\n  },\n  {\n      id: id++,\n      title: `Uchiha Sasuke`,\n      image: `http://narutoquoteapi.herokuapp.com/image/sasuke.png`,\n      content: `I have long since closed my eyes... My only goal is in the         darkness.`,\n  },\n  {\n      id: id++,\n      title: `Uchiha Itachi`,\n      image: `http://narutoquoteapi.herokuapp.com/image/itachi.png`,\n      content: `Foolish little brother. Despise me, hate me!`,\n  },\n  {\n      id: id++,\n      title: `Hatake Kakashi`,\n      image: `http://narutoquoteapi.herokuapp.com/image/kakashi.png`,\n      content: `Those who break the rules are scum, that's true, but those who    abandon their friends are worse than scum.`,\n  },\n  {\n      id: id++,\n      title: `Hatake Kakashi`,\n      image: `http://narutoquoteapi.herokuapp.com/image/kakashi.png`,\n      content: `(To Team 7) Hmm, how can I put this? My first impression of this    group... You're a bunch of idiots.`,\n  },\n  {\n      id: id++,\n      title: `Hatake Kakashi`,\n      image: `http://narutoquoteapi.herokuapp.com/image/kakashi.png`,\n      content: `The next generation will always surpass the previous one. It's     one of the never-ending cycles in life.`,\n  },\n  {\n      id: id++,\n      title: `Pain`,\n      image: `http://narutoquoteapi.herokuapp.com/image/pain.png`,\n      content: `Those who do not understand true pain can never understand true     peace`,\n  },\n  {\n      id: id++,\n      title: `Pain`,\n      image: `http://narutoquoteapi.herokuapp.com/image/pain.png`,\n      content: `I want you to feel pain, to think about pain, to accept pain, to    know pain.`,\n  },\n  {\n      id: id++,\n      title: `Jiraiya`,\n      image: `http://narutoquoteapi.herokuapp.com/image/jiraiya.png`,\n      content: `Oh, I'm not a little pervert... I'm a big one!`,\n  },\n  {\n      id: id++,\n      title: `Jiraiya`,\n      image: `http://narutoquoteapi.herokuapp.com/image/jiraiya.png`,\n      content: `A Shinobi's life is not measured by how they lived but rather      what they managed to accomplish before their death.`,\n  },\n  {\n      id: id++,\n      title: `Rock Lee`,\n      image: `http://narutoquoteapi.herokuapp.com/image/rocklee.png`,\n      content: `Guy-sensei is just the coolest person ever! I mean, he is so      cool, he practically glows with cool!`,\n  },\n  {\n      id: id++,\n      title: `Rock Lee`,\n      image: `http://narutoquoteapi.herokuapp.com/image/rocklee.png`,\n      content: `I am the valiant green beast of the Hidden Leaf Village`,\n  },\n  {\n      id: id++,\n      title: `Haruno Sakura`,\n      image: `http://narutoquoteapi.herokuapp.com/image/sakura.png`,\n      content: `SHANNARO!`,\n  },\n  {\n      id: id++,\n      title: `Haruno Sakura`,\n      image: `http://narutoquoteapi.herokuapp.com/image/sakura.png`,\n      content: `Sasuke-kuuuuuuuun!`,\n  },\n  {\n      id: id++,\n      title: `Haruno Sakura`,\n      image: `http://narutoquoteapi.herokuapp.com/image/sakura.png`,\n      content: `All I've been doing is watching you two from behind... now, get a good look at my back!`,\n  },\n  {\n      id: id++,\n      title: `Gaara`,\n      image: `http://narutoquoteapi.herokuapp.com/image/gaara.png`,\n      content: `A soul needs a purpose to live... and so I concluded that my    purpose was to kill everyone besides myself. I felt alive...`,\n  },\n  {\n      id: id++,\n      title: `Nara Shikamaru`,\n      image: `http://narutoquoteapi.herokuapp.com/image/shikamaru.png`,\n      content: `What a drag...`,\n  }\n  ];","import { type as findCurrentItemType } from '../actions/findCurrentItem';\nimport items from '../../data/items';\nconst defaultState = 0;\n\nfunction reducer (state = defaultState, { type, payload }){\n  switch(type){\n      case findCurrentItemType:  {\n          return items.find(n => n.id === payload);\n\n      }\n      default: \n          return state;\n  }\n}\n\nexport default reducer;","import { type as findResultsType } from '../actions/findResults';\nimport items from '../../data/items';\n\nconst defaultState = [];\n\nfunction reducer (state = defaultState, { type, payload }){\n  switch(type){\n      case findResultsType: {\n          const regex = new RegExp(`^${payload}`, 'i');\n          return items.filter(n => regex.test(n.title));\n  }\n      default: \n          return state;\n  }\n}\n\nexport default reducer;","import { type as findSuggestionsType } from '../actions/findSuggestions';\nimport items from '../../data/items';\n\nconst defaultState = [];\n\nfunction reducer (state = defaultState, { type, payload }){\n  switch(type){\n      case findSuggestionsType: {\n\n          const regex = new RegExp(`^${payload}`, 'i');\n          return items.filter(n => regex.test(n.title));\n      }\n      default: \n          return state;\n  }\n}\n\nexport default reducer;","import { createStore, combineReducers } from 'redux';\nimport currentItem from './reducers/currentItem';\nimport results from './reducers/results';\nimport suggestions from './reducers/suggestions';\n\n\nconst reducer = combineReducers (\n    { \n        results,\n        suggestions,\n        currentItem\n    }\n);\n\nconst store = createStore(reducer);\n\nexport default store; ","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Results from './components/results';\nimport Details from './components/details';\nimport store from './redux/store';\n\n\nclass App extends Component {\n  render(){\n    return(\n        <Provider store={store} >\n            <BrowserRouter>\n                <Switch>\n                    <Route path='/details/:itemId' component={Details} />\n                    <Route path='/results' component={Results} />\n                    <Redirect from='/' to='/results' />\n                </Switch>\n            </BrowserRouter>\n        </Provider>\n\n\n    )\n  }\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}